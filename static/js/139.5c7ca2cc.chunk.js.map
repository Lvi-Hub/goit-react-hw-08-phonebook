{"version":3,"file":"static/js/139.5c7ca2cc.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/nanoid/index.browser.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"submitForm\":\"ContactForm_submitForm__pqovI\",\"labelName\":\"ContactForm_labelName__3dKMP\",\"labelNumber\":\"ContactForm_labelNumber__ifMHw\",\"submitBtn\":\"ContactForm_submitBtn__lg06P\"};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter;\n\n","import React from 'react';\nimport css from './ContactForm.module.css';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const submitName = e.target.elements.name.value;\n    const submitNumber = e.target.elements.number.value;\n\n    const checkContacts = contacts.map(el => el.name.toLowerCase());\n    console.log(checkContacts);\n\n    if (checkContacts.includes(submitName.toLowerCase())) {\n      alert('The contact has already existed');\n      return;\n    } else {\n      dispatch(\n        addContact({\n          createdAt: Date(),\n          name: submitName.toString(),\n          number: submitNumber.toString(),\n          id: nanoid(),\n        }),\n        e.target.reset()\n      );\n    }\n  };\n\n  return (\n    <form className={css.submitForm} onSubmit={handleSubmit}>\n      <label className={css.labelName}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.labelNumber}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.submitBtn} type=\"submit\" onSubmit={handleSubmit}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"labelFilter\":\"Filter_labelFilter__7SBy1\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './Filter.module.css';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { filterSet } from 'redux/filtersSlice';\n\nexport const Filter = () => {\n  const dispatch=useDispatch();\n  const filterState=useSelector(getFilter)\n\n  const handleChange=(e)=>{\n   const value=e.target.value\n    dispatch(filterSet(value));\n      \n  }\n  \n\n  return (\n    <label className={css.labelFilter}>\n      Find contact by name\n      <input type=\"text\" value={filterState} onChange={handleChange} />\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"contactName\":\"ContactList_contactName__wLcl6\",\"btnDelete\":\"ContactList_btnDelete__Eeo9v\"};","import css from './ContactList.module.css';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nimport { getContacts, getFilter,} from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport function ContactList() {\n  const filterState = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n  console.log(filterState);\n\n  const normalizedFilter = filterState.toLowerCase();\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  const dispatch = useDispatch();\n  const handleClick = e => {\n    dispatch(deleteContact(e.currentTarget.id));\n  };\n  return (\n    <ul className={css.contactList}>\n      {visibleContacts.map(({ id, name, number }) => {\n        return (\n          <li className={css.contactItem} id={id} key={id}>\n            <p className={css.contactName}>\n              {name}: {number}\n            </p>\n            <button className={css.btnDelete} id={id} onClick={handleClick}>\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport { ContactForm } from 'components/ContactForm';\n// import Loading from 'components/Loading/Loading';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { getContacts, getError, getIsLoading } from 'redux/contacts/selectors';\n// import { selectUserEmail } from 'redux/auth/selectors';\n\n\nfunction Contacts() {\n  const dispatch = useDispatch();\n    const loading = useSelector(getIsLoading);\n    // const userEmail=useSelector(selectUserEmail)\n    const error = useSelector(getError);\n    const items = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n    <ContactForm />\n  \n    {/* <p><span>{userEmail}'s</span> contacts</p> */}\n\n    <Filter />\n    {loading && <p>LOADIND...</p>}\n    {error && <p>No feedback from server, try again, please</p>}\n    {items.length > 0 && !error && <ContactList />}\n  </div>)\n}\nexport default Contacts;\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","ContactForm","useSelector","dispatch","useDispatch","handleSubmit","e","preventDefault","submitName","target","elements","name","value","submitNumber","number","checkContacts","map","el","toLowerCase","console","log","includes","alert","addContact","createdAt","Date","reset","className","css","onSubmit","type","pattern","title","required","Filter","filterState","onChange","filterSet","ContactList","normalizedFilter","visibleContacts","contact","handleClick","deleteContact","currentTarget","onClick","loading","useEffect","fetchContacts","length"],"sourceRoot":""}